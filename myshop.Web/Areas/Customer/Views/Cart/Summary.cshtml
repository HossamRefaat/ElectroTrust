@model ShoppingCartVM
@using Microsoft.Extensions.Options
@inject IOptions<Utilities.StripeData> Stripe


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/f4e855eb8f.js" crossorigin="anonymous"></script>

    <style>
        .order-summary-card {
            background-color: #f8f9fa; /* Light background like cart summary */
            border: 1px solid #dee2e6;
            border-radius: 0.375rem; /* Standard Bootstrap rounding */
            position: sticky; /* Keep summary visible on scroll */
            top: 20px; /* Adjust top spacing as needed */
        }

        .order-summary-item img {
            width: 50px;
            height: 50px;
            /* Use contain based on previous feedback */
            object-fit: contain;
            margin-right: 1rem;
            background-color: #fff; /* Background for contain */
            border: 1px solid #eee;
        }

        .checkout-section {
            margin-bottom: 2rem;
        }
        /* Improve validation message display */
        .form-control.is-invalid ~ span.text-danger,
        .form-select.is-invalid ~ span.text-danger {
            display: block;
            width: 100%;
            margin-top: .25rem;
            font-size: .875em;
            /* color: #dc3545; */ /* Inherits color */
        }
    </style>

    @* --- Main Content: Checkout --- *@
    <div class="container py-5">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-area="Customer" asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-area="Customer" asp-controller="Cart" asp-action="Index">Shopping Cart</a></li>
                <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
        </nav>
        <h1 class="h2 fw-bold mb-4">Checkout</h1>

        @* --- Main Form for Submission --- *@
        <form method="post" class="needs-validation" novalidate>
            <div class="row g-4">
                @* --- Left Column: Billing, Shipping, Payment Forms --- *@
                <div class="col-lg-7">
                    <div class="card shadow-sm">
                        <div class="card-body">

                            @* Billing Address Section *@
                            <section class="checkout-section">
                                <h4 class="mb-3 fw-bold">Billing address</h4>
                                <div class="row g-3">
                                    @* Assuming OrderHeader.Name holds the full name, adjust if using FirstName/LastName *@
                                    <div class="col-12">
                                        <label asp-for="OrderHeader.Name" class="form-label"></label>
                                        <input type="text" class="form-control" asp-for="OrderHeader.Name">
                                        <span asp-validation-for="OrderHeader.Name" class="text-danger"></span>
                                    </div>

                                    
                                    <div class="col-12">
                                        <label asp-for="OrderHeader.PhoneNumber" class="form-label"></label>
                                        <input type="tel" class="form-control" asp-for="OrderHeader.PhoneNumber" placeholder="123-456-7890">
                                        <span asp-validation-for="OrderHeader.PhoneNumber" class="text-danger"></span>
                                    </div>

                                    <div class="col-12">
                                        <label asp-for="OrderHeader.Address" class="form-label"></label>
                                        <input type="text" class="form-control" asp-for="OrderHeader.Address" placeholder="1234 Main St">
                                        <span asp-validation-for="OrderHeader.Address" class="text-danger"></span>
                                    </div>

                                  

                                    <div class="col-md-6">
                                        <label asp-for="OrderHeader.City" class="form-label"></label>
                                        <input type="text" class="form-control" asp-for="OrderHeader.City">
                                        <span asp-validation-for="OrderHeader.City" class="text-danger"></span>
                                    </div>
                                </div>
                               
                            </section>                           

                        </div> @* End card-body *@
                    </div> @* End card shadow-sm *@
                </div> @* End col-lg-7 *@

                @* --- Right Column: Order Summary --- *@
                <div class="col-lg-5">
                    <div class="card order-summary-card shadow-sm">
                        <div class="card-body">
                            <h4 class="d-flex justify-content-between align-items-center mb-3">
                                <span class="text-primary fw-bold">Your cart</span>
                                @* Dynamic item count *@
                                <span class="badge bg-primary rounded-pill">@Model.CartsList.Count()</span>
                            </h4>
                            <ul class="list-group mb-3">
                                @foreach (var item in Model.CartsList)
                                {
                                    <li class="list-group-item d-flex justify-content-between lh-sm order-summary-item">
                                        <div class="d-flex align-items-center">
                                            <a asp-area="Customer" asp-controller="Home" asp-action="Details" asp-route-productId="@item.Product.Id">
                                                <img src="~/@item.Product.Img" alt="@item.Product.Name">
                                            </a>
                                            <div>
                                                <h6 class="my-0">@item.Product.Name</h6>
                                                <small class="text-muted">Qty: @item.Count</small>
                                            </div>
                                        </div>
                                        @* Line Item Total *@
                                        <span class="text-muted">@((item.Product.Price * item.Count).ToString("c"))</span>
                                    </li>
                                }

                                <li class="list-group-item d-flex justify-content-between fw-bold border-top pt-3">
                                    <span>Total (USD)</span>
                                    <strong>@Model.OrderHeader.TotalPrice.ToString("c")</strong>
                                </li>
                            </ul>

                            @* Promo Code Input Form (optional) *@
                            @* <form class="card p-2 mb-3">...</form> *@

                            <button class="btn btn-primary w-100 btn-lg py-2 fw-bold" type="submit">
                                Place Order
                            </button>

                        </div> @* End card-body *@
                    </div> @* End order-summary-card *@
                </div> @* End col-lg-5 *@

            </div> @* End row g-4 *@
        </form> @* End Main Form *@

    </div> @* End container py-5 *@


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script>
        // Basic Bootstrap validation script (from static HTML)
        (function () {
          'use strict'
          var forms = document.querySelectorAll('.needs-validation')
          Array.prototype.slice.call(forms)
            .forEach(function (form) {
              form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                  event.preventDefault()
                  event.stopPropagation()
                }
                form.classList.add('was-validated')
              }, false)
            })
        })()

        // Toggle Shipping Address Logic (from static HTML)
        const sameAddressCheckbox = document.getElementById('same-address');
        const shippingAddressSection = document.getElementById('shipping-address-section');

        // Check if elements exist before adding listeners
        if (sameAddressCheckbox && shippingAddressSection) {
             const shippingInputs = shippingAddressSection.querySelectorAll('input, select');
             const toggleShippingSection = function() {
                 if (sameAddressCheckbox.checked) {
                    shippingAddressSection.style.display = 'none';
                    shippingInputs.forEach(input => {
                         input.required = false; // Make shipping not required
                         // If using aspnet validation, might need to also disable/enable client-side validation rules
                    });
                 } else {
                    shippingAddressSection.style.display = 'block';
                     // Add 'required' back dynamically if needed for specific fields when shown
                     // Example: document.getElementById('shippingName').required = true;
                 }
             };
             sameAddressCheckbox.addEventListener('change', toggleShippingSection);
             // Initial call to set correct state on page load
             toggleShippingSection();
        }

        // Toggle Payment Details Logic (from static HTML)
        const paymentMethods = document.querySelectorAll('input[name="paymentMethod"]');
        const ccDetails = document.getElementById('credit-card-details');
        const paypalDetails = document.getElementById('paypal-details');

        if (paymentMethods.length > 0 && ccDetails && paypalDetails) {
            const ccInputs = ccDetails.querySelectorAll('input');
            const togglePaymentDetails = function() {
                let selectedMethod = document.querySelector('input[name="paymentMethod"]:checked');
                if (!selectedMethod) return; // Exit if nothing selected

                if (selectedMethod.id === 'credit' || selectedMethod.id === 'debit') {
                     ccDetails.style.display = 'flex'; // Use flex for row layout
                     paypalDetails.style.display = 'none';
                     ccInputs.forEach(input => input.required = true); // Make CC fields required
                 } else if (selectedMethod.id === 'paypal') {
                     ccDetails.style.display = 'none';
                     paypalDetails.style.display = 'block';
                     ccInputs.forEach(input => input.required = false); // Make CC fields not required
                 } else {
                      ccDetails.style.display = 'none';
                      paypalDetails.style.display = 'none';
                      ccInputs.forEach(input => input.required = false);
                 }
             };

             paymentMethods.forEach(method => {
                 method.addEventListener('change', togglePaymentDetails);
             });
             // Initial call to set correct state on page load
             togglePaymentDetails();
         }

    </script>

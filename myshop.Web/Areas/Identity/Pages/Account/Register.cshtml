@page
@using Utilities
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Clone E-Commerce</title>

    @* Link to your site's base CSS if needed *@
    @* <link rel="stylesheet" type="text/css" href="~/css/styles.css"> *@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/f4e855eb8f.js" crossorigin="anonymous"></script>

    <style>
        .signup-container {
            max-width: 600px; /* Slightly wider to accommodate more fields */
            margin: 3rem auto; /* Center vertically and horizontally */
        }
        /* Ensure validation messages are displayed correctly */
        span.text-danger {
            display: block;
            width: 100%;
            margin-top: .25rem;
            font-size: .875em;
        }

        .role-selection {
            margin-bottom: 1.5rem;
            padding: 1rem;
            border: 1px solid #dee2e6;
            border-radius: .375rem;
            background-color: #f8f9fa;
        }

        .role-selection legend {
             font-size: 1rem;
             font-weight: 600;
             margin-bottom: 0.75rem;
        }

    </style>
</head>
<body>
    <div class="alert alert-info shadow-sm border border-primary rounded p-4 mb-4 text-center mx-auto mt-4" role="alert" style="width: 50%;">
        <h5 class="alert-heading mb-3">Admin Credentials for Testing</h5>
        <p class="mb-1"><strong>Email:</strong> hossamrefaatmazmaz17@gmail.com</p>
        <p class="mb-0"><strong>Password:</strong> 2A5k_b8,^=U9</p>
    </div>
    @* --- Main Content: Sign Up Form --- *@
    <div class="container signup-container">
        <div class="card shadow-sm">
            <div class="card-body p-4 p-md-5">
                <h2 class="card-title text-center mb-4 fw-bold">Create Account</h2>

                @* Use the form from the Razor Page for Identity integration *@
                <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="needs-validation" novalidate>

                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>

                    <div class="row g-3">
                        @* Combined Name field (from Razor) *@
                        <div class="col-12">
                            <label asp-for="Input.Name" class="form-label"></label>
                            <input asp-for="Input.Name" class="form-control" autocomplete="name" aria-required="true" placeholder="Your Full Name">
                            <span asp-validation-for="Input.Name" class="text-danger"></span>
                        </div>

                        <div class="col-12">
                            <label asp-for="Input.Email" class="form-label"></label>
                            <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="you@example.com">
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>

                        <div class="col-12">
                            <label asp-for="Input.Address" class="form-label"></label>
                            <input asp-for="Input.Address" class="form-control" autocomplete="street-address" aria-required="true" placeholder="123 Main St">
                            <span asp-validation-for="Input.Address" class="text-danger"></span>
                        </div>

                        <div class="col-12">
                            <label asp-for="Input.City" class="form-label"></label>
                            <input asp-for="Input.City" class="form-control" autocomplete="address-level2" aria-required="true" placeholder="Anytown">
                            <span asp-validation-for="Input.City" class="text-danger"></span>
                        </div>

                        @* Add other address fields like State, PostalCode if they are in your InputModel *@

                        <div class="col-md-6">
                            <label asp-for="Input.Password" class="form-label"></label>
                            <input asp-for="Input.Password" type="password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Enter password">
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                            <input asp-for="Input.ConfirmPassword" type="password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Confirm password">
                            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                        </div>

                        @* Role Selection visible only for Admin *@
                        @if (User.IsInRole(SD.AdminRole))
                        {
                            <div class="col-12 mt-4 role-selection">
                                <fieldset>
                                    <legend>Assign Role</legend>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" value="@SD.AdminRole" name="RoleRadio" id="roleAdmin">
                                        <label class="form-check-label" for="roleAdmin">@SD.AdminRole</label>
                                    </div>
                                    
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" value="@SD.CustomerRole" name="RoleRadio" id="roleCustomer" checked>
                                        <label class="form-check-label" for="roleCustomer">@SD.CustomerRole</label>
                                    </div>
                                </fieldset>
                            </div>
                        }

                    </div> @* End row g-3 *@

                    <hr class="my-4">

                    @* Use conditional submit button text from Razor Page *@
                    @if (User.IsInRole(SD.AdminRole))
                    {
                        <button id="registerSubmit" type="submit" class="w-100 btn btn-primary btn-lg fw-bold">Create New User</button>
                    }
                    else
                    {
                        <button id="registerSubmit" type="submit" class="w-100 btn btn-primary btn-lg fw-bold">Sign Up</button>
                    }

                    <p class="text-center mt-3 mb-0">
                        Already have an account?
                        @* Link to Login Page using Tag Helper *@
                        <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Sign In</a>
                    </p>
                </form>
            </div> @* End card-body *@
        </div> @* End card *@
    </div> @* End signup-container *@

   
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>

    @* Client-side validation and password confirmation JS (adapted from static HTML) *@
    <script>
        // Bootstrap validation script
        (function () {
          'use strict'
          var forms = document.querySelectorAll('.needs-validation')
          Array.prototype.slice.call(forms)
            .forEach(function (form) {
              form.addEventListener('submit', function (event) {

                // Custom Password Confirmation Check
                 var passwordInput = form.querySelector('input[data-val-equalto-other]'); // Find ConfirmPassword based on data-val attribute
                 if (passwordInput) {
                    var originalPasswordInput = document.getElementById('Input_Password'); // Assuming ID follows pattern
                    if (originalPasswordInput && passwordInput.value !== originalPasswordInput.value) {
                        passwordInput.setCustomValidity("Passwords do not match.");
                    } else {
                         passwordInput.setCustomValidity(""); // Clear validation if they match or original isn't found
                    }
                 }

                 if (!form.checkValidity()) {
                  event.preventDefault()
                  event.stopPropagation()
                }

                form.classList.add('was-validated')
              }, false)
            })
        })()

        //Clear custom validity on input for confirm password
         var confirmPasswordInput = document.querySelector('input[data-val-equalto-other]');
         if (confirmPasswordInput) {
              confirmPasswordInput.addEventListener('input', function() {
                  confirmPasswordInput.setCustomValidity("");
              });
          }

    </script>

    @* Include ASP.NET Core Validation Scripts Partial *@
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }

</body>
</html>